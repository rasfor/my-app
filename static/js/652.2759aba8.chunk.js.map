{"version":3,"file":"static/js/652.2759aba8.chunk.js","mappings":"0KACA,EAA0B,wBAA1B,EAA6D,yBAA7D,EAAiG,yBAAjG,EAAuI,2B,UCAvI,EAA0B,yBAA1B,EAA4D,wB,SCEtDA,EAAW,SAAC,GAAD,SAAGC,SAA0BC,EAAgBA,GAW9D,EATgB,SAACC,GACf,OACE,gBAAKC,UAAWJ,EAAhB,UACE,SAAC,KAAD,CAASK,GAAI,YAAcF,EAAMG,GAAjC,SAAsCH,EAAMI,UCPlD,EAAyB,uBCczB,EAZe,SAACJ,GAEd,OACE,iBAAKC,UAAWF,EAAhB,WACE,0BACE,gBAAKM,IAAKL,EAAMM,QAEjBN,EAAMO,gBCTb,EAA4B,6BCc5B,EAZkB,SAACP,GAEjB,OACE,iBAAKC,UAAWF,EAAhB,WACE,yBAAMC,EAAMO,eACZ,0BACE,gBAAKF,IAAKL,EAAMM,Y,iDCLlBE,GAAeC,EAAAA,EAAAA,GAAiB,KAetC,GAJyBC,EAAAA,EAAAA,GAAU,CAC/BC,KAAK,UADgBD,EATL,SAACV,GACjB,OACI,kBAAMY,SAAUZ,EAAMa,aAAtB,WACI,SAACC,EAAA,EAAD,CAAOC,SAAU,CAACC,EAAAA,EAAUR,GAAeJ,KAAM,iBAAkBa,UAAWC,EAAAA,MAC9E,2CC8BZ,EAjCe,SAAClB,GAEd,IAIImB,EAAkBnB,EAAMoB,SAASC,KAAI,SAACC,GACxC,OAAO,SAAC,EAAD,CAA0BnB,GAAImB,EAAQnB,GAAIC,KAAMkB,EAAQlB,MAA1CkB,EAAQnB,OAG3BoB,EAAkBvB,EAAMwB,SAASH,KAAI,SAACI,GACxC,OAAoB,GAAhBA,EAAQC,MACH,SAAC,EAAD,CAA4BnB,YAAakB,EAAQlB,YAAaD,IAAI,uHAAlDmB,EAAQtB,KAExB,SAAC,EAAD,CAAyBI,YAAakB,EAAQlB,YAAaD,IAAI,gFAAlDmB,EAAQtB,OAEhC,OACE,iBAAKF,UAAWF,EAAhB,WACE,gBAAKE,UAAWF,EAAhB,SACGoB,KAEH,gBAAKlB,UAAWF,EAAhB,SACGwB,KAEH,gBAAKtB,UAAWF,EAAhB,UACI,SAAC,EAAD,CAAkBa,SAvBH,SAACe,GACtB3B,EAAM4B,eAAeD,EAAOE,yB,UCahC,GAAeC,E,QAAAA,IACbC,EAAAA,GACAC,EAAAA,EAAAA,KAlBoB,SAACC,GACrB,MAAO,CACLb,SAAUa,EAAMC,QAAQd,SACxBS,eAAgBI,EAAMC,QAAQL,eAC9BL,SAAUS,EAAMC,QAAQV,aAIH,SAACW,GACxB,MAAO,CACLP,eAAgB,SAACQ,GACfD,GAASE,EAAAA,EAAAA,GAAqBD,SAKpC,CAGGE","sources":["webpack://my-app/./src/components/Dialogs/Dialog.module.css?7071","webpack://my-app/./src/components/Dialogs/Contact/Contact.module.css?1878","components/Dialogs/Contact/Contact.jsx","webpack://my-app/./src/components/Dialogs/Sender/Sender.module.css?c64b","components/Dialogs/Sender/Sender.jsx","webpack://my-app/./src/components/Dialogs/Recipient/Recipient.module.css?14e8","components/Dialogs/Recipient/Recipient.jsx","components/Dialogs/MessageReduxform/MessageReduxForm.js","components/Dialogs/Dialog.jsx","components/Dialogs/DialogContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialog_dialogs__rwEHo\",\"contacts\":\"Dialog_contacts__IpPo0\",\"messages\":\"Dialog_messages__1rOv+\",\"newMessage\":\"Dialog_newMessage__hU6jP\"};","// extracted by mini-css-extract-plugin\nexport default {\"contact\":\"Contact_contact__sBgfi\",\"active\":\"Contact_active__LY+qL\"};","import { NavLink } from 'react-router-dom';\r\nimport module from './Contact.module.css'\r\n\r\nconst setClass = ({ isActive }) => isActive ? module.active : module.contact;\r\n\r\nconst Contact = (props) => {\r\n  return (\r\n    <div className={setClass}>\r\n      <NavLink to={'/dialogs/' + props.id}>{props.name}</NavLink>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default Contact;","// extracted by mini-css-extract-plugin\nexport default {\"sender\":\"Sender_sender__Vcwqf\"};","import module from './Sender.module.css';\r\n\r\n\r\nconst Sender = (props) => {\r\n\r\n  return (\r\n    <div className={module.sender} >\r\n      <div>\r\n        <img src={props.ava} />\r\n      </div>\r\n      {props.messageText}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sender;","// extracted by mini-css-extract-plugin\nexport default {\"recipient\":\"Recipient_recipient__jj4VW\"};","import module from './Recipient.module.css';\r\n\r\n\r\nconst Recipient = (props) => {\r\n\r\n  return (\r\n    <div className={module.recipient} >\r\n      <div>{props.messageText}</div>\r\n      <div>\r\n        <img src={props.ava} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Recipient;","import {Field, reduxForm} from \"redux-form\";\r\nimport React from \"react\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nconst maxLength100 = maxLengthCreator(100);\r\n\r\nconst MessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field validate={[required, maxLength100]} name={\"newMessageText\"} component={Textarea}></Field>\r\n            <button>Send</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst MessageReduxForm = reduxForm({\r\n    form:\"dialog\"\r\n})(MessageForm)\r\n\r\nexport default MessageReduxForm;","import module from './Dialog.module.css';\r\nimport Contact from './Contact/Contact';\r\nimport Sender from './Sender/Sender'\r\nimport Recipient from './Recipient/Recipient'\r\nimport React from 'react';\r\nimport MessageReduxForm from \"./MessageReduxform/MessageReduxForm\";\r\n\r\nconst Dialog = (props) => {\r\n\r\n  const sendNewMessage = (values) => {\r\n    props.sendNewMessage(values.newMessageText);\r\n  }\r\n\r\n  let contactElements = props.contacts.map((contact) => {\r\n    return <Contact key={contact.id} id={contact.id} name={contact.name} />\r\n  })\r\n\r\n  let messageElements = props.messages.map((message) => {\r\n    if (message.self == true)\r\n      return <Recipient key={message.id} messageText={message.messageText} ava='https://avatars.mds.yandex.net/get-zen_doc/1708007/pub_6043694a665e4413f3c4ad55_6043ad4d58285736ddaf8c1e/scale_1200' />\r\n    else\r\n      return <Sender key={message.id} messageText={message.messageText} ava='https://i.pinimg.com/originals/7b/ce/25/7bce255e224f6cc9b5d52e60ee587abb.jpg' />\r\n  });\r\n  return (\r\n    <div className={module.dialogs}>\r\n      <div className={module.contacts}>\r\n        {contactElements}\r\n      </div>\r\n      <div className={module.messages}>\r\n        {messageElements}\r\n      </div>\r\n      <div className={module.newMessage}>\r\n          <MessageReduxForm onSubmit={sendNewMessage} />\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default Dialog;","import { createSendMessageObj } from '../../redux/dialogs-reducer'\r\nimport { connect } from 'react-redux';\r\nimport Dialog from './Dialog';\r\nimport { WithAuthRedirect } from '../hoc/WithAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    contacts: state.dialogs.contacts,\r\n    newMessageText: state.dialogs.newMessageText,\r\n    messages: state.dialogs.messages,\r\n  }\r\n}\r\n\r\nlet mapDispatchTpProps = (dispatch) => {\r\n  return {\r\n    sendNewMessage: (newMessageTxt) => {\r\n      dispatch(createSendMessageObj(newMessageTxt))\r\n    }\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  WithAuthRedirect,\r\n  connect(mapStateToProps, mapDispatchTpProps))\r\n  (Dialog)"],"names":["setClass","isActive","module","props","className","to","id","name","src","ava","messageText","maxLength100","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","validate","required","component","Textarea","contactElements","contacts","map","contact","messageElements","messages","message","self","values","sendNewMessage","newMessageText","compose","WithAuthRedirect","connect","state","dialogs","dispatch","newMessageTxt","createSendMessageObj","Dialog"],"sourceRoot":""}